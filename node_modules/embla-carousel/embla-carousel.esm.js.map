{"version":3,"file":"embla-carousel.esm.js","sources":["src/components/Alignment.ts","src/components/Animation.ts","src/components/Axis.ts","src/components/utils.ts","src/components/Limit.ts","src/components/Counter.ts","src/components/Direction.ts","src/components/EventStore.ts","src/components/Vector1d.ts","src/components/DragHandler.ts","src/components/DragTracker.ts","src/components/PxToPercent.ts","src/components/ScrollBody.ts","src/components/ScrollBounds.ts","src/components/ScrollContain.ts","src/components/ScrollLimit.ts","src/components/ScrollLooper.ts","src/components/ScrollProgress.ts","src/components/ScrollSnap.ts","src/components/ScrollTarget.ts","src/components/ScrollTo.ts","src/components/SlideLooper.ts","src/components/SlidesInView.ts","src/components/SlideSizes.ts","src/components/Translate.ts","src/components/Engine.ts","src/components/EventEmitter.ts","src/components/Options.ts","src/components/OptionsPseudo.ts","src/components/index.ts"],"sourcesContent":["export type AlignmentOptionType = 'start' | 'center' | 'end' | number\n\nexport type AlignmentType = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number,\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (typeof align === 'number') return percent()\n    return predefined[align](n)\n  }\n\n  const self: AlignmentType = {\n    measure,\n  }\n  return self\n}\n","type CallbackType = () => void\n\nexport type AnimationType = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): AnimationType {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: CallbackType): CallbackType {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: AnimationType = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","import { DirectionOptionType } from './Direction'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (rect: DOMRect) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  direction: DirectionOptionType,\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(rect: DOMRect): number {\n    const { width, height } = rect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return direction === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return direction === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n  }\n  return self\n}\n","export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return !n ? 0 : n / mathAbs(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function roundToDecimals(decimalPoints: number): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number): number => Math.round(n * pow) / pow\n}\n\nexport function debounce(callback: () => void, time: number): () => void {\n  let timeout = 0\n  return (): void => {\n    window.clearTimeout(timeout)\n    timeout = window.setTimeout(callback, time) || 0\n  }\n}\n\nexport function arrayGroup<GenericType>(\n  array: GenericType[],\n  size: number,\n): GenericType[][] {\n  const groups = []\n  for (let i = 0; i < array.length; i += size) {\n    groups.push(array.slice(i, i + size))\n  }\n  return groups\n}\n\nexport function arrayKeys<GenericType>(array: GenericType[]): number[] {\n  return Object.keys(array).map(Number)\n}\n\nexport function arrayLast<GenericType>(array: GenericType[]): GenericType {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<GenericType>(array: GenericType[]): number {\n  return Math.max(0, array.length - 1)\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number, max: number): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n  min: number\n  max: number\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean,\n): CounterType {\n  const { min, constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    add,\n    clone,\n    get,\n    set,\n    min,\n    max,\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  apply: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function apply(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    apply,\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType,\n  ) => EventStoreType\n  removeAll: () => EventStoreType\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = false,\n  ): EventStoreType {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => node.removeEventListener(type, handler, options))\n    return self\n  }\n\n  function removeAll(): EventStoreType {\n    listeners = listeners.filter((remove) => remove())\n    return self\n  }\n\n  const self: EventStoreType = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","export type Vector1DType = {\n  get: () => number\n  set: (v: Vector1DType | number) => Vector1DType\n  add: (v: Vector1DType | number) => Vector1DType\n  subtract: (v: Vector1DType | number) => Vector1DType\n  multiply: (n: number) => Vector1DType\n  divide: (n: number) => Vector1DType\n  normalize: () => Vector1DType\n}\n\nexport function Vector1D(value: number): Vector1DType {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1DType | number): Vector1DType {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1DType | number): Vector1DType {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1DType | number): Vector1DType {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1DType {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1DType {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1DType {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1DType | number): number {\n    return typeof n === 'number' ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { DirectionType } from './Direction'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventEmitterType } from './EventEmitter'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { deltaAbs, factorAbs, mathAbs, mathSign } from './utils'\n\nexport type DragHandlerType = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeAllEvents: () => void\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  target: Vector1DType,\n  dragFree: boolean,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  events: EventEmitterType,\n  loop: boolean,\n  skipSnaps: boolean,\n): DragHandlerType {\n  const { cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 5 : 16\n  const baseMass = 1\n  const dragThreshold = 20\n\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = rootNode\n    activationEvents\n      .add(node, 'touchmove', () => undefined)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click)\n  }\n\n  function addInteractionEvents(): void {\n    const node = !isMouse ? rootNode : document\n    interactionEvents\n      .add(node, 'touchmove', move)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move)\n      .add(node, 'mouseup', up)\n  }\n\n  function removeAllEvents(): void {\n    activationEvents.removeAll()\n    interactionEvents.removeAll()\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.clone().add(mathSign(force) * -1)\n    const isEdge = next.get() === index.min || next.get() === index.max\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < dragThreshold) return baseForce\n    if (!loop && isEdge) return baseForce * 0.4\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    isMouse = evt.type === 'mousedown'\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n\n    const isMoving = deltaAbs(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n    const isNotFocusNode = !isFocusNode(evt.target as Element)\n    const preventDefault = isMoving || (isMouse && isNotFocusNode)\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useBaseMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    events.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n    if (preventDefault) evt.preventDefault()\n  }\n\n  function move(evt: PointerEventType): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      const lastScroll = dragTracker.readPoint(evt)\n      const lastCross = dragTracker.readPoint(evt, crossAxis)\n      const diffScroll = deltaAbs(lastScroll, startScroll)\n      const diffCross = deltaAbs(lastCross, startCross)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(direction.apply(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction.apply(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5\n    const isVigorous = targetChanged && forceFactor > 0.75\n    const isBelowThreshold = mathAbs(rawForce) < dragThreshold\n    const speed = isVigorous ? 10 : baseSpeed\n    const mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    events.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) evt.preventDefault()\n  }\n\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeAllEvents,\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { PxToPercentType } from './PxToPercent'\nimport { mathAbs } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  isTouchEvent: (evt: PointerEventType) => evt is TouchEvent\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  pxToPercent: PxToPercentType,\n): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function isTouchEvent(evt: PointerEventType): evt is TouchEvent {\n    return typeof TouchEvent !== 'undefined' && evt instanceof TouchEvent\n  }\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isTouchEvent(evt) ? evt.touches[0] : evt)[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return pxToPercent.measure(readPoint(evt))\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return pxToPercent.measure(diff)\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? pxToPercent.measure(force) : 0\n  }\n\n  const self: DragTrackerType = {\n    isTouchEvent,\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","export type PxToPercentType = {\n  measure: (n: number) => number\n  totalPercent: number\n}\n\nexport function PxToPercent(viewInPx: number): PxToPercentType {\n  const totalPercent = 100\n\n  function measure(n: number): number {\n    if (viewInPx === 0) return 0\n    return (n / viewInPx) * totalPercent\n  }\n\n  const self: PxToPercentType = {\n    measure,\n    totalPercent,\n  }\n  return self\n}\n","import { map, roundToDecimals, mathSign } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  seek: (target: Vector1DType) => ScrollBodyType\n  settle: (target: Vector1DType) => boolean\n  update: () => void\n  useBaseMass: () => ScrollBodyType\n  useBaseSpeed: () => ScrollBodyType\n  useMass: (n: number) => ScrollBodyType\n  useSpeed: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  baseSpeed: number,\n  baseMass: number,\n): ScrollBodyType {\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n\n  let attractionDirection = 0\n  let speed = baseSpeed\n  let mass = baseMass\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(force: Vector1DType): void {\n    force.divide(mass)\n    acceleration.add(force)\n  }\n\n  function seek(target: Vector1DType): ScrollBodyType {\n    attraction.set(target).subtract(location)\n    const magnitude = map(attraction.get(), 0, 100, 0, speed)\n    attractionDirection = mathSign(attraction.get())\n    attraction.normalize().multiply(magnitude).subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(target: Vector1DType): boolean {\n    const diff = target.get() - location.get()\n    const hasSettled = !roundToTwoDecimals(diff)\n    if (hasSettled) location.set(target)\n    return hasSettled\n  }\n\n  function direction(): number {\n    return attractionDirection\n  }\n\n  function useBaseSpeed(): ScrollBodyType {\n    return useSpeed(baseSpeed)\n  }\n\n  function useBaseMass(): ScrollBodyType {\n    return useMass(baseMass)\n  }\n\n  function useSpeed(n: number): ScrollBodyType {\n    speed = n\n    return self\n  }\n\n  function useMass(n: number): ScrollBodyType {\n    mass = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    seek,\n    settle,\n    update,\n    useBaseMass,\n    useBaseSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n): ScrollBoundsType {\n  const pullBackThreshold = 10\n  const edgeOffsetTolerance = 50\n  const maxFriction = 0.85\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = Math.min(diffToEdge / edgeOffsetTolerance, maxFriction)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useSpeed(10).useMass(3)\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollContainOptionType = '' | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snaps: number[],\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, snaps[0])\n  const snapsBounded = snapsAligned.map(scrollBounds.constrain)\n  const snapsContained = measureContained()\n\n  function findDuplicates(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = findDuplicates()\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean,\n): ScrollLimitType {\n  const limit = measureLimit()\n\n  function measureLimit(): LimitType {\n    const startSnap = scrollSnaps[0]\n    const endSnap = arrayLast(scrollSnaps)\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit(min, max)\n  }\n\n  const self: ScrollLimitType = {\n    limit,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { PxToPercentType } from './PxToPercent'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  pxToPercent: PxToPercentType,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[],\n): ScrollLooperType {\n  const min = limit.min + pxToPercent.measure(0.1)\n  const max = limit.max + pxToPercent.measure(0.1)\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length: scrollLength } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return currentLocation / -scrollLength\n  }\n\n  const self: ScrollProgressType = {\n    get,\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { PxToPercentType } from './PxToPercent'\nimport { arrayLast, arrayGroup, mathAbs } from './utils'\n\nexport type ScrollSnapType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnap(\n  axis: AxisType,\n  alignment: AlignmentType,\n  pxToPercent: PxToPercentType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slidesToScroll: number,\n): ScrollSnapType {\n  const { startEdge, endEdge } = axis\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return arrayGroup(slideRects, slidesToScroll)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(pxToPercent.measure)\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map(pxToPercent.measure)\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    const groupedSnaps = arrayGroup(snaps, slidesToScroll).map((g) => g[0])\n    const alignments = measureSizes().map(alignment.measure)\n    return groupedSnaps.map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapType = {\n    snaps,\n    snapsAligned,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType,\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(d1: number, d2: number): number {\n    return mathAbs(d1) < mathAbs(d2) ? d1 : d2\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const t1 = target\n    const t2 = target + contentSize\n    const t3 = target - contentSize\n\n    if (!loop) return t1\n    if (!direction) return minDistance(minDistance(t1, t2), t3)\n\n    const shortest = minDistance(t1, direction === 1 ? t2 : t3)\n    return mathAbs(shortest) * direction\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { EventEmitterType } from './EventEmitter'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  events: EventEmitterType,\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetVector.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      events.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { SlidesInViewType } from './SlidesInView'\nimport { Vector1DType } from './Vector1d'\n\ntype EdgeType = 'start' | 'end'\n\ntype LoopPointType = {\n  point: number\n  location: number\n  index: number\n  getTarget: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  viewSize: number,\n  contentSize: number,\n  slideSizesWithGaps: number[],\n  scrollSnaps: number[],\n  slidesInView: SlidesInViewType,\n  scrollLocation: Vector1DType,\n  slides: HTMLElement[],\n): SlideLooperType {\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findLoopPoints(indexes: number[], edge: EdgeType): LoopPointType[] {\n    const isStartEdge = edge === 'start'\n    const offset = isStartEdge ? -contentSize : contentSize\n    const slideBounds = slidesInView.findSlideBounds([offset])\n\n    return indexes.map((index) => {\n      const initial = isStartEdge ? 0 : -contentSize\n      const altered = isStartEdge ? contentSize : 0\n      const bounds = slideBounds.filter((b) => b.index === index)[0]\n      const point = bounds[isStartEdge ? 'end' : 'start']\n      const getTarget = (): number =>\n        scrollLocation.get() > point ? initial : altered\n      return { point, getTarget, index, location: -1 }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, 'end')\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, 'start')\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { getTarget, location, index } = loopPoint\n      const target = getTarget()\n      if (target !== location) {\n        slides[index].style[axis.startEdge] = `${target}%`\n        loopPoint.location = target\n      }\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach(({ index }) => {\n      slides[index].style[axis.startEdge] = ''\n    })\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type SlideBoundType = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInViewType = {\n  check: (location: number, bounds?: SlideBoundType[]) => number[]\n  findSlideBounds: (offsets?: number[], threshold?: number) => SlideBoundType[]\n}\n\nexport function SlidesInView(\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  snaps: number[],\n  limit: LimitType,\n  loop: boolean,\n  inViewThreshold: number,\n): SlidesInViewType {\n  const { removeOffset, constrain } = limit\n  const cachedThreshold = Math.min(Math.max(inViewThreshold, 0.01), 0.99)\n  const cachedOffsets = loop ? [0, contentSize, -contentSize] : [0]\n  const cachedBounds = findSlideBounds(cachedOffsets, cachedThreshold)\n\n  function findSlideBounds(\n    offsets?: number[],\n    threshold?: number,\n  ): SlideBoundType[] {\n    const slideOffsets = offsets || cachedOffsets\n    const slideThreshold = threshold || 0\n    const thresholds = slideSizes.map((s) => s * slideThreshold)\n\n    return slideOffsets.reduce((list: SlideBoundType[], offset) => {\n      const bounds = snaps.map((snap, index) => ({\n        start: snap - slideSizes[index] + thresholds[index] + offset,\n        end: snap + viewSize - thresholds[index] + offset,\n        index,\n      }))\n      return list.concat(bounds)\n    }, [])\n  }\n\n  function check(location: number, bounds?: SlideBoundType[]): number[] {\n    const limitedLocation = loop ? removeOffset(location) : constrain(location)\n    const slideBounds = bounds || cachedBounds\n\n    return slideBounds.reduce((list: number[], slideBound) => {\n      const { index, start, end } = slideBound\n      const inList = list.indexOf(index) !== -1\n      const inView = start < limitedLocation && end > limitedLocation\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInViewType = {\n    check,\n    findSlideBounds,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { PxToPercentType } from './PxToPercent'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  pxToPercent: PxToPercentType,\n  slides: HTMLElement[],\n  slideRects: DOMRect[],\n  loop: boolean,\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const sizesInPx = slideRects.map(measureSize)\n  const slideSizes = sizesInPx.map(pxToPercent.measure)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isLast = index === arrayLastIndex(rects)\n        const style = window.getComputedStyle(arrayLast(slides))\n        const endGap = parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n        if (isLast) return sizesInPx[index] + (loop ? endGap : 0)\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(pxToPercent.measure)\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\nimport { Vector1DType } from './Vector1d'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (vector: Vector1DType) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement,\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}%,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}%,0px)`\n  }\n\n  function to(target: Vector1DType): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.apply(target.get()))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    containerStyle.transform = ''\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport { Animation, AnimationType } from './Animation'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { Direction, DirectionType } from './Direction'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventEmitterType } from './EventEmitter'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { OptionsType } from './Options'\nimport { PxToPercent, PxToPercentType } from './PxToPercent'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnap } from './ScrollSnap'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type Engine = {\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  options: OptionsType\n  pxToPercent: PxToPercentType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  target: Vector1DType\n  translate: TranslateType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  containerRect: DOMRect\n  slideRects: DOMRect[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: OptionsType,\n  events: EventEmitterType,\n): Engine {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll,\n    skipSnaps,\n    containScroll,\n  } = options\n\n  // Measurements\n  const containerRect = container.getBoundingClientRect()\n  const slideRects = slides.map((slide) => slide.getBoundingClientRect())\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const pxToPercent = PxToPercent(axis.measureSize(containerRect))\n  const viewSize = pxToPercent.totalPercent\n  const alignment = Alignment(align, viewSize)\n  const { slideSizes, slideSizesWithGaps } = SlideSizes(\n    axis,\n    pxToPercent,\n    slides,\n    slideRects,\n    loop,\n  )\n  const { snaps, snapsAligned } = ScrollSnap(\n    axis,\n    alignment,\n    pxToPercent,\n    containerRect,\n    slideRects,\n    slidesToScroll,\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained } = ScrollContain(\n    viewSize,\n    contentSize,\n    snaps,\n    snapsAligned,\n    containScroll,\n  )\n\n  const contain = !loop && containScroll !== ''\n  const scrollSnaps = contain ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Draw\n  const update = (): void => {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown())\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop()\n      events.emit('settle')\n    }\n    if (!settled) {\n      events.emit('scroll')\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction())\n      engine.slideLooper.loop()\n    }\n\n    engine.translate.to(location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(location, speed, 1)\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target,\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    events,\n  )\n  const slidesInView = SlidesInView(\n    viewSize,\n    contentSize,\n    slideSizes,\n    snaps,\n    limit,\n    loop,\n    inViewThreshold,\n  )\n\n  // DragHandler\n  const dragHandler = DragHandler(\n    axis,\n    direction,\n    root,\n    target,\n    dragFree,\n    DragTracker(axis, pxToPercent),\n    location,\n    animation,\n    scrollTo,\n    scrollBody,\n    scrollTarget,\n    index,\n    events,\n    loop,\n    skipSnaps,\n  )\n\n  // Slider\n  const engine: Engine = {\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    direction,\n    dragHandler,\n    eventStore: EventStore(),\n    pxToPercent,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds(limit, location, target, scrollBody),\n    scrollLooper: ScrollLooper(contentSize, pxToPercent, limit, location, [\n      location,\n      target,\n    ]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      viewSize,\n      contentSize,\n      slideSizesWithGaps,\n      scrollSnaps,\n      slidesInView,\n      location,\n      slides,\n    ),\n    slidesInView,\n    slideIndexes,\n    target,\n    translate: Translate(axis, direction, container),\n  }\n  return engine\n}\n","type CallbackType = (evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventEmitterType = {\n  emit: (evt: EmblaEventType) => EventEmitterType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventEmitterType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventEmitterType\n}\n\nexport function EventEmitter(): EventEmitterType {\n  const listeners: ListenersType = {}\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventEmitterType {\n    getListeners(evt).forEach((e) => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventEmitterType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventEmitterType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventEmitterType = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisOptionType } from './Axis'\nimport { DirectionOptionType } from './Direction'\nimport { ScrollContainOptionType } from './ScrollContain'\n\nexport type OptionsType = {\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  dragFree: boolean\n  draggable: boolean\n  inViewThreshold: number\n  loop: boolean\n  skipSnaps: boolean\n  slidesToScroll: number\n  speed: number\n  startIndex: number\n}\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  direction: 'ltr',\n  dragFree: false,\n  draggable: true,\n  inViewThreshold: 0,\n  loop: false,\n  skipSnaps: false,\n  slidesToScroll: 1,\n  speed: 10,\n  startIndex: 0,\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { EmblaOptionsType } from './Options'\n\nexport type OptionsPseudoType = {\n  get: () => EmblaOptionsType\n}\n\nexport function OptionsPseudo(node: HTMLElement): OptionsPseudoType {\n  const pseudoString = getComputedStyle(node, ':before').content\n\n  function get(): EmblaOptionsType {\n    try {\n      return JSON.parse(pseudoString.slice(1, -1).replace(/\\\\/g, ''))\n    } catch (error) {} // eslint-disable-line no-empty\n    return {}\n  }\n\n  const self: OptionsPseudoType = {\n    get,\n  }\n  return self\n}\n","import { Engine } from './Engine'\nimport { EventEmitter, EventEmitterType } from './EventEmitter'\nimport { defaultOptions, EmblaOptionsType } from './Options'\nimport { OptionsPseudo, OptionsPseudoType } from './OptionsPseudo'\nimport { debounce } from './utils'\n\nexport type EmblaNodesType = {\n  root: HTMLElement\n  container?: HTMLElement\n  slides?: HTMLElement[]\n}\n\ntype EmblaPluginOptionsType = {\n  [key: string]: unknown\n}\n\nexport type EmblaPluginType<\n  OptionsType extends EmblaPluginOptionsType = EmblaPluginOptionsType,\n> = {\n  name: string\n  options: OptionsType\n  init: (embla: EmblaCarouselType) => void\n  destroy: () => void\n  [key: string]: unknown\n}\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => Engine\n  destroy: () => void\n  off: EventEmitterType['off']\n  on: EventEmitterType['on']\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  nodes: HTMLElement | EmblaNodesType,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[],\n): EmblaCarouselType {\n  const events = EventEmitter()\n  const debouncedResize = debounce(resize, 500)\n  const reInit = reActivate\n  const { on, off } = events\n\n  let engine: Engine\n  let activated = false\n  let optionsBase = Object.assign(\n    {},\n    defaultOptions,\n    EmblaCarousel.globalOptions,\n  )\n  let options = Object.assign({}, optionsBase)\n  let optionsPseudo: OptionsPseudoType\n  let plugins: EmblaPluginType[]\n  let rootSize = 0\n  let root: HTMLElement\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function setupElements(): void {\n    const providedContainer = 'container' in nodes && nodes.container\n    const providedSlides = 'slides' in nodes && nodes.slides\n\n    root = 'root' in nodes ? nodes.root : nodes\n    container = providedContainer || <HTMLElement>root.children[0]\n    slides = providedSlides || [].slice.call(container.children)\n    optionsPseudo = OptionsPseudo(root)\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    setupElements()\n    optionsBase = Object.assign({}, optionsBase, withOptions)\n    options = Object.assign({}, optionsBase, optionsPseudo.get())\n    plugins = Object.assign([], withPlugins)\n    engine = Engine(root, container, slides, options, events)\n    engine.eventStore.add(window, 'resize', debouncedResize)\n    engine.translate.to(engine.location)\n    rootSize = engine.axis.measureSize(root.getBoundingClientRect())\n    plugins.forEach((plugin) => plugin.init(self))\n\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate()\n        return activate({ loop: false }, withPlugins)\n      }\n      engine.slideLooper.loop()\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents()\n    }\n    if (!activated) {\n      setTimeout(() => events.emit('init'), 0)\n      activated = true\n    }\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    if (!activated) return\n    const startIndex = selectedScrollSnap()\n    const newOptions = Object.assign({ startIndex }, withOptions)\n    deActivate()\n    activate(newOptions, withPlugins || plugins)\n    events.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeAllEvents()\n    engine.animation.stop()\n    engine.eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    plugins.forEach((plugin) => plugin.destroy())\n  }\n\n  function destroy(): void {\n    if (!activated) return\n    deActivate()\n    activated = false\n    events.emit('destroy')\n  }\n\n  function resize(): void {\n    if (!activated) return\n    const size = engine.axis.measureSize(root.getBoundingClientRect())\n    if (rootSize !== size) reActivate()\n    events.emit('resize')\n  }\n\n  function slidesInView(target?: boolean): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target?: boolean): number[] {\n    const inView = slidesInView(target)\n    return engine.slideIndexes.filter((index) => inView.indexOf(index) === -1)\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed)\n    if (activated) engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.clone().add(1)\n    scrollTo(next.get(), jump === true, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.clone().add(-1)\n    scrollTo(prev.get(), jump === true, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function internalEngine(): Engine {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n  activate(userOptions, userPlugins)\n  return self\n}\n\nEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\n\nexport default EmblaCarousel\n"],"names":["Alignment","align","viewSize","predefined","start","center","end","n","percent","Number","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","direction","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","rect","width","height","map","value","iStart","iStop","oStart","oStop","mathAbs","Math","abs","mathSign","deltaAbs","valueB","valueA","factorAbs","diff","roundToDecimals","decimalPoints","pow","round","debounce","time","timeout","clearTimeout","setTimeout","arrayGroup","array","size","groups","i","length","push","slice","arrayKeys","Object","keys","arrayLast","arrayLastIndex","max","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","_a","loopEnd","counter","withinLimit","get","set","add","clone","Direction","sign","apply","EventStore","listeners","node","type","handler","options","addEventListener","removeEventListener","removeAll","filter","remove","Vector1D","vector","readNumber","subtract","multiply","divide","normalize","DragHandler","rootNode","target","dragFree","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","index","events","skipSnaps","crossAxis","focusNodes","dragStartPoint","activationEvents","interactionEvents","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","baseMass","dragThreshold","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","undefined","down","up","click","addInteractionEvents","document","move","removeAllEvents","isFocusNode","name","nodeName","indexOf","forceBoost","boost","allowedForce","force","targetChanged","next","isEdge","baseForce","byDistance","distance","byIndex","evt","button","isMoving","clearPreventClick","isNotFocusNode","preventDefault","pointerDown","useBaseMass","useSpeed","readPoint","emit","cancelable","lastScroll","lastCross","diffScroll","diffCross","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","isVigorous","isBelowThreshold","speed","mass","useMass","clickAllowed","DragTracker","pxToPercent","logInterval","startEvent","lastEvent","isTouchEvent","TouchEvent","readTime","timeStamp","evtAxis","property","coord","touches","expired","diffDrag","diffTime","isFlick","PxToPercent","viewInPx","totalPercent","ScrollBody","roundToTwoDecimals","velocity","acceleration","attraction","attractionDirection","update","applyForce","seek","magnitude","settle","hasSettled","useBaseSpeed","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","maxFriction","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","friction","toggleActive","ScrollContain","contentSize","snaps","snapsAligned","containScroll","scrollBounds","snapsBounded","snapsContained","measureContained","findDuplicates","startSnap","endSnap","lastIndexOf","ScrollLimit","scrollSnaps","measureLimit","ScrollLooper","vectors","shouldLoop","loopDistance","forEach","v","ScrollProgress","scrollLength","ScrollSnap","alignment","containerRect","slideRects","slidesToScroll","measureUnaligned","measureAligned","measureSizes","rects","snap","groupedSnaps","g","alignments","ScrollTarget","targetVector","minDistance","d1","d2","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","sort","t1","t2","t3","shortest","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","SlideLooper","slideSizesWithGaps","slidesInView","scrollLocation","slides","ascItems","descItems","reverse","loopPoints","startPoints","concat","endPoints","removeSlideSizes","indexes","from","reduce","a","slidesInGap","gap","remainingGap","findLoopPoints","isStartEdge","offset","slideBounds","findSlideBounds","initial","altered","bounds","b","point","getTarget","canLoop","every","otherIndexes","loopPoint","style","clear","SlidesInView","slideSizes","inViewThreshold","cachedThreshold","cachedOffsets","cachedBounds","offsets","threshold","slideOffsets","slideThreshold","thresholds","s","list","check","limitedLocation","slideBound","inList","inView","SlideSizes","sizesInPx","measureWithGaps","isLast","getComputedStyle","endGap","parseFloat","getPropertyValue","Translate","container","translate","x","y","containerStyle","to","transform","Engine","root","scrollAxis","contentDirection","startIndex","getBoundingClientRect","slide","_b","contain","slideIndexes","engine","dragHandler","settled","scrollLooper","slideLooper","startLocation","eventStore","scrollProgress","EventEmitter","getListeners","e","on","off","defaultOptions","draggable","OptionsPseudo","pseudoString","content","JSON","parse","replace","error","EmblaCarousel","nodes","userOptions","userPlugins","debouncedResize","resize","reInit","reActivate","activated","optionsBase","assign","globalOptions","optionsPseudo","plugins","rootSize","setupElements","providedContainer","providedSlides","children","call","activate","withOptions","withPlugins","plugin","init","deActivate","offsetParent","selectedScrollSnap","newOptions","destroy","slidesNotInView","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","internalEngine","containerNode","slideNodes"],"mappings":"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"}