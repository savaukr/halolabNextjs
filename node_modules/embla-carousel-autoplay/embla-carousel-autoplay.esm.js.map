{"version":3,"file":"embla-carousel-autoplay.esm.js","sources":["src/components/Options.ts","src/components/index.ts"],"sourcesContent":["export type OptionsType = {\n  delay: number\n  playOnInit: boolean\n  stopOnInteraction: boolean\n  stopOnMouseEnter: boolean\n  stopOnLastSnap: boolean\n}\n\nexport const defaultOptions: OptionsType = {\n  delay: 4000,\n  playOnInit: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  stopOnLastSnap: false,\n}\n\nexport type AutoplayOptionsType = Partial<OptionsType>\n","import { defaultOptions, AutoplayOptionsType, OptionsType } from './Options'\nimport { EmblaCarouselType, EmblaPluginType } from 'embla-carousel'\n\nexport type AutoplayType = EmblaPluginType<OptionsType> & {\n  play: () => void\n  stop: () => void\n  reset: () => void\n}\n\nfunction Autoplay(\n  userOptions?: AutoplayOptionsType,\n  userNode?: (emblaRoot: HTMLElement) => HTMLElement | null,\n): AutoplayType {\n  const options = Object.assign(\n    {},\n    defaultOptions,\n    Autoplay.globalOptions,\n    userOptions,\n  )\n  const {\n    playOnInit,\n    stopOnInteraction,\n    stopOnMouseEnter,\n    stopOnLastSnap,\n    delay,\n  } = options\n  const interaction = stopOnInteraction ? destroy : stop\n  let carousel: EmblaCarouselType\n  let timer = 0\n\n  function init(embla: EmblaCarouselType): void {\n    carousel = embla\n    const { eventStore } = carousel.internalEngine()\n    const emblaRoot = carousel.rootNode()\n    const root = (userNode && userNode(emblaRoot)) || emblaRoot\n\n    carousel.on('pointerDown', interaction)\n    if (!stopOnInteraction) carousel.on('pointerUp', reset)\n\n    if (stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', interaction)\n      if (!stopOnInteraction) eventStore.add(root, 'mouseleave', reset)\n    }\n\n    eventStore.add(document, 'visibilitychange', () => {\n      if (document.visibilityState === 'hidden') return stop()\n      reset()\n    })\n    eventStore.add(window, 'pagehide', (event: PageTransitionEvent) => {\n      if (event.persisted) stop()\n    })\n\n    if (playOnInit) play()\n  }\n\n  function destroy(): void {\n    carousel.off('pointerDown', interaction)\n    if (!stopOnInteraction) carousel.off('pointerUp', reset)\n    stop()\n    timer = 0\n  }\n\n  function play(): void {\n    stop()\n    timer = window.setTimeout(next, delay)\n  }\n\n  function stop(): void {\n    if (!timer) return\n    window.clearTimeout(timer)\n  }\n\n  function reset(): void {\n    if (!timer) return\n    stop()\n    play()\n  }\n\n  function next(): void {\n    const { index } = carousel.internalEngine()\n    const kill = stopOnLastSnap && index.get() === index.max\n\n    if (kill) return destroy()\n\n    if (carousel.canScrollNext()) {\n      carousel.scrollNext()\n    } else {\n      carousel.scrollTo(0)\n    }\n    play()\n  }\n\n  const self: AutoplayType = {\n    name: 'Autoplay',\n    options,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n  }\n  return self\n}\n\nAutoplay.globalOptions = <AutoplayOptionsType | undefined>undefined\n\nexport default Autoplay\n"],"names":["defaultOptions","delay","playOnInit","stopOnInteraction","stopOnMouseEnter","stopOnLastSnap","Autoplay","userOptions","userNode","options","Object","assign","globalOptions","interaction","destroy","stop","carousel","timer","init","embla","eventStore","internalEngine","emblaRoot","rootNode","root","on","reset","add","document","visibilityState","window","event","persisted","play","off","setTimeout","next","clearTimeout","index","kill","get","max","canScrollNext","scrollNext","scrollTo","self","name","undefined"],"mappings":"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"}